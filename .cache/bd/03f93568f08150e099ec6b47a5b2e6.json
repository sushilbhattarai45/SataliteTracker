{"id":"node_modules/@loaders.gl/loader-utils/dist/esm/lib/binary-utils/binary-copy-utils.js","dependencies":[{"name":"C:\\Users\\Lenovo\\Documents\\Projects\\satelite tracker\\node_modules\\@loaders.gl\\loader-utils\\dist\\esm\\lib\\binary-utils\\binary-copy-utils.js.map","includedInParent":true,"mtime":1664708772242},{"name":"C:\\Users\\Lenovo\\Documents\\Projects\\satelite tracker\\package.json","includedInParent":true,"mtime":1664709020568},{"name":"C:\\Users\\Lenovo\\Documents\\Projects\\satelite tracker\\node_modules\\@loaders.gl\\loader-utils\\package.json","includedInParent":true,"mtime":1664708772146},{"name":"./memory-copy-utils","loc":{"line":1,"column":28,"index":28},"parent":"C:\\Users\\Lenovo\\Documents\\Projects\\satelite tracker\\node_modules\\@loaders.gl\\loader-utils\\dist\\esm\\lib\\binary-utils\\binary-copy-utils.js","resolved":"C:\\Users\\Lenovo\\Documents\\Projects\\satelite tracker\\node_modules\\@loaders.gl\\loader-utils\\dist\\esm\\lib\\binary-utils\\memory-copy-utils.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.copyPaddedArrayBufferToDataView = copyPaddedArrayBufferToDataView;\nexports.copyPaddedStringToDataView = copyPaddedStringToDataView;\n\nvar _memoryCopyUtils = require(\"./memory-copy-utils\");\n\nfunction copyPaddedArrayBufferToDataView(dataView, byteOffset, sourceBuffer, padding) {\n  const paddedLength = (0, _memoryCopyUtils.padToNBytes)(sourceBuffer.byteLength, padding);\n  const padLength = paddedLength - sourceBuffer.byteLength;\n\n  if (dataView) {\n    const targetArray = new Uint8Array(dataView.buffer, dataView.byteOffset + byteOffset, sourceBuffer.byteLength);\n    const sourceArray = new Uint8Array(sourceBuffer);\n    targetArray.set(sourceArray);\n\n    for (let i = 0; i < padLength; ++i) {\n      dataView.setUint8(byteOffset + sourceBuffer.byteLength + i, 0x20);\n    }\n  }\n\n  byteOffset += paddedLength;\n  return byteOffset;\n}\n\nfunction copyPaddedStringToDataView(dataView, byteOffset, string, padding) {\n  const textEncoder = new TextEncoder();\n  const stringBuffer = textEncoder.encode(string);\n  byteOffset = copyPaddedArrayBufferToDataView(dataView, byteOffset, stringBuffer, padding);\n  return byteOffset;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":14,"column":7},"generated":{"line":11,"column":0}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"copyPaddedArrayBufferToDataView","original":{"line":14,"column":16},"generated":{"line":11,"column":9}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":14,"column":7},"generated":{"line":11,"column":40}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"dataView","original":{"line":15,"column":2},"generated":{"line":11,"column":41}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":14,"column":7},"generated":{"line":11,"column":49}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"byteOffset","original":{"line":16,"column":2},"generated":{"line":11,"column":51}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":14,"column":7},"generated":{"line":11,"column":61}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"sourceBuffer","original":{"line":17,"column":2},"generated":{"line":11,"column":63}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":14,"column":7},"generated":{"line":11,"column":75}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"padding","original":{"line":18,"column":2},"generated":{"line":11,"column":77}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":14,"column":7},"generated":{"line":11,"column":84}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":19,"column":2},"generated":{"line":11,"column":86}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":20,"column":2},"generated":{"line":12,"column":2}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"paddedLength","original":{"line":20,"column":8},"generated":{"line":12,"column":8}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":20,"column":20},"generated":{"line":12,"column":20}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"padToNBytes","original":{"line":20,"column":23},"generated":{"line":12,"column":23}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"padToNBytes","original":{"line":20,"column":23},"generated":{"line":12,"column":27}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"padToNBytes","original":{"line":20,"column":23},"generated":{"line":12,"column":55}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"sourceBuffer","original":{"line":20,"column":35},"generated":{"line":12,"column":57}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":20,"column":47},"generated":{"line":12,"column":69}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"byteLength","original":{"line":20,"column":48},"generated":{"line":12,"column":70}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"padToNBytes","original":{"line":20,"column":23},"generated":{"line":12,"column":80}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"padding","original":{"line":20,"column":60},"generated":{"line":12,"column":82}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"padToNBytes","original":{"line":20,"column":23},"generated":{"line":12,"column":89}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":20,"column":2},"generated":{"line":12,"column":90}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":13,"column":2}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"padLength","original":{"line":21,"column":8},"generated":{"line":13,"column":8}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":21,"column":17},"generated":{"line":13,"column":17}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"paddedLength","original":{"line":21,"column":20},"generated":{"line":13,"column":20}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":21,"column":32},"generated":{"line":13,"column":32}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"sourceBuffer","original":{"line":21,"column":35},"generated":{"line":13,"column":35}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":21,"column":47},"generated":{"line":13,"column":47}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"byteLength","original":{"line":21,"column":48},"generated":{"line":13,"column":48}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":13,"column":58}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":15,"column":2}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"dataView","original":{"line":23,"column":6},"generated":{"line":15,"column":6}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":15,"column":14}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":23,"column":16},"generated":{"line":15,"column":16}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":16,"column":4}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"targetArray","original":{"line":25,"column":10},"generated":{"line":16,"column":10}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":25,"column":21},"generated":{"line":16,"column":21}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":25,"column":24},"generated":{"line":16,"column":24}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"Uint8Array","original":{"line":25,"column":28},"generated":{"line":16,"column":28}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":25,"column":24},"generated":{"line":16,"column":38}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"dataView","original":{"line":26,"column":6},"generated":{"line":16,"column":39}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":26,"column":14},"generated":{"line":16,"column":47}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"buffer","original":{"line":26,"column":15},"generated":{"line":16,"column":48}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":25,"column":24},"generated":{"line":16,"column":54}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"dataView","original":{"line":27,"column":6},"generated":{"line":16,"column":56}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":27,"column":14},"generated":{"line":16,"column":64}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"byteOffset","original":{"line":27,"column":15},"generated":{"line":16,"column":65}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"dataView","original":{"line":27,"column":6},"generated":{"line":16,"column":75}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"byteOffset","original":{"line":27,"column":28},"generated":{"line":16,"column":78}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":25,"column":24},"generated":{"line":16,"column":88}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"sourceBuffer","original":{"line":28,"column":6},"generated":{"line":16,"column":90}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":28,"column":18},"generated":{"line":16,"column":102}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"byteLength","original":{"line":28,"column":19},"generated":{"line":16,"column":103}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":25,"column":24},"generated":{"line":16,"column":113}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":16,"column":114}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":17,"column":4}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"sourceArray","original":{"line":30,"column":10},"generated":{"line":17,"column":10}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":30,"column":21},"generated":{"line":17,"column":21}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":30,"column":24},"generated":{"line":17,"column":24}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"Uint8Array","original":{"line":30,"column":28},"generated":{"line":17,"column":28}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":30,"column":24},"generated":{"line":17,"column":38}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"sourceBuffer","original":{"line":30,"column":39},"generated":{"line":17,"column":39}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":30,"column":24},"generated":{"line":17,"column":51}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":17,"column":52}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"targetArray","original":{"line":31,"column":4},"generated":{"line":18,"column":4}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":31,"column":15},"generated":{"line":18,"column":15}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"set","original":{"line":31,"column":16},"generated":{"line":18,"column":16}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"targetArray","original":{"line":31,"column":4},"generated":{"line":18,"column":19}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"sourceArray","original":{"line":31,"column":20},"generated":{"line":18,"column":20}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"targetArray","original":{"line":31,"column":4},"generated":{"line":18,"column":31}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":20,"column":4}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":34,"column":9},"generated":{"line":20,"column":9}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"i","original":{"line":34,"column":13},"generated":{"line":20,"column":13}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":34,"column":14},"generated":{"line":20,"column":14}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":34,"column":17},"generated":{"line":20,"column":17}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":20,"column":18}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"i","original":{"line":34,"column":20},"generated":{"line":20,"column":20}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":34,"column":21},"generated":{"line":20,"column":21}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"padLength","original":{"line":34,"column":24},"generated":{"line":20,"column":24}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":20,"column":33}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":34,"column":35},"generated":{"line":20,"column":35}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"i","original":{"line":34,"column":37},"generated":{"line":20,"column":37}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":20,"column":38}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":34,"column":40},"generated":{"line":20,"column":40}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"dataView","original":{"line":36,"column":6},"generated":{"line":21,"column":6}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":36,"column":14},"generated":{"line":21,"column":14}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"setUint8","original":{"line":36,"column":15},"generated":{"line":21,"column":15}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"dataView","original":{"line":36,"column":6},"generated":{"line":21,"column":23}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"byteOffset","original":{"line":36,"column":24},"generated":{"line":21,"column":24}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":36,"column":34},"generated":{"line":21,"column":34}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"sourceBuffer","original":{"line":36,"column":37},"generated":{"line":21,"column":37}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":36,"column":49},"generated":{"line":21,"column":49}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"byteLength","original":{"line":36,"column":50},"generated":{"line":21,"column":50}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"byteOffset","original":{"line":36,"column":24},"generated":{"line":21,"column":60}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"i","original":{"line":36,"column":63},"generated":{"line":21,"column":63}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"dataView","original":{"line":36,"column":6},"generated":{"line":21,"column":64}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":36,"column":66},"generated":{"line":21,"column":66}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"dataView","original":{"line":36,"column":6},"generated":{"line":21,"column":70}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":37,"column":5},"generated":{"line":22,"column":4}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":38,"column":3},"generated":{"line":23,"column":2}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"byteOffset","original":{"line":39,"column":2},"generated":{"line":25,"column":2}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":39,"column":12},"generated":{"line":25,"column":12}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"paddedLength","original":{"line":39,"column":16},"generated":{"line":25,"column":16}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"byteOffset","original":{"line":39,"column":2},"generated":{"line":25,"column":28}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":26,"column":2}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"byteOffset","original":{"line":40,"column":9},"generated":{"line":26,"column":9}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":26,"column":19}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":27,"column":0}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":53,"column":7},"generated":{"line":29,"column":0}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"copyPaddedStringToDataView","original":{"line":53,"column":16},"generated":{"line":29,"column":9}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":53,"column":7},"generated":{"line":29,"column":35}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"dataView","original":{"line":54,"column":2},"generated":{"line":29,"column":36}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":53,"column":7},"generated":{"line":29,"column":44}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"byteOffset","original":{"line":55,"column":2},"generated":{"line":29,"column":46}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":53,"column":7},"generated":{"line":29,"column":56}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"string","original":{"line":56,"column":2},"generated":{"line":29,"column":58}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":53,"column":7},"generated":{"line":29,"column":64}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"padding","original":{"line":57,"column":2},"generated":{"line":29,"column":66}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":53,"column":7},"generated":{"line":29,"column":73}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":58,"column":10},"generated":{"line":29,"column":75}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":59,"column":2},"generated":{"line":30,"column":2}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"textEncoder","original":{"line":59,"column":8},"generated":{"line":30,"column":8}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":59,"column":19},"generated":{"line":30,"column":19}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":59,"column":22},"generated":{"line":30,"column":22}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"TextEncoder","original":{"line":59,"column":26},"generated":{"line":30,"column":26}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":59,"column":22},"generated":{"line":30,"column":37}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":59,"column":2},"generated":{"line":30,"column":39}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":62,"column":2},"generated":{"line":31,"column":2}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"stringBuffer","original":{"line":62,"column":8},"generated":{"line":31,"column":8}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":62,"column":20},"generated":{"line":31,"column":20}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"textEncoder","original":{"line":62,"column":23},"generated":{"line":31,"column":23}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":62,"column":34},"generated":{"line":31,"column":34}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"encode","original":{"line":62,"column":35},"generated":{"line":31,"column":35}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"textEncoder","original":{"line":62,"column":23},"generated":{"line":31,"column":41}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"string","original":{"line":62,"column":42},"generated":{"line":31,"column":42}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"textEncoder","original":{"line":62,"column":23},"generated":{"line":31,"column":48}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":62,"column":2},"generated":{"line":31,"column":49}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"byteOffset","original":{"line":64,"column":2},"generated":{"line":32,"column":2}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":64,"column":12},"generated":{"line":32,"column":12}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"copyPaddedArrayBufferToDataView","original":{"line":64,"column":15},"generated":{"line":32,"column":15}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":64,"column":46},"generated":{"line":32,"column":46}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"dataView","original":{"line":64,"column":47},"generated":{"line":32,"column":47}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":64,"column":46},"generated":{"line":32,"column":55}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"byteOffset","original":{"line":64,"column":57},"generated":{"line":32,"column":57}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":64,"column":46},"generated":{"line":32,"column":67}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"stringBuffer","original":{"line":64,"column":69},"generated":{"line":32,"column":69}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":64,"column":46},"generated":{"line":32,"column":81}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"padding","original":{"line":64,"column":83},"generated":{"line":32,"column":83}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":64,"column":46},"generated":{"line":32,"column":90}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"byteOffset","original":{"line":64,"column":2},"generated":{"line":32,"column":91}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":66,"column":2},"generated":{"line":33,"column":2}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":"byteOffset","original":{"line":66,"column":9},"generated":{"line":33,"column":9}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":66,"column":2},"generated":{"line":33,"column":19}},{"source":"../../../../src/lib/binary-utils/binary-copy-utils.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":34,"column":0}}],"sources":{"../../../../src/lib/binary-utils/binary-copy-utils.ts":"import {TypedArray} from '../../types';\nimport {padToNBytes} from './memory-copy-utils';\n\n/**\n * Copy sourceBuffer to dataView with some padding\n *\n * @param {DataView | null} dataView - destination data container. If null - only new offset is calculated\n * @param {number} byteOffset - destination byte offset to copy to\n * @param {Array | TypedArray} sourceBuffer - source data buffer\n * @param {number} padding - pad the resulting array to multiple of \"padding\" bytes. Additional bytes are filled with 0x20 (ASCII space)\n *\n * @return new byteOffset of resulting dataView\n */\nexport function copyPaddedArrayBufferToDataView(\n  dataView: DataView | null,\n  byteOffset: number,\n  sourceBuffer: TypedArray,\n  padding: number\n) {\n  const paddedLength = padToNBytes(sourceBuffer.byteLength, padding);\n  const padLength = paddedLength - sourceBuffer.byteLength;\n\n  if (dataView) {\n    // Copy array\n    const targetArray = new Uint8Array(\n      dataView.buffer,\n      dataView.byteOffset + byteOffset,\n      sourceBuffer.byteLength\n    );\n    const sourceArray = new Uint8Array(sourceBuffer);\n    targetArray.set(sourceArray);\n\n    // Add PADDING\n    for (let i = 0; i < padLength; ++i) {\n      // json chunk is padded with spaces (ASCII 0x20)\n      dataView.setUint8(byteOffset + sourceBuffer.byteLength + i, 0x20);\n    }\n  }\n  byteOffset += paddedLength;\n  return byteOffset;\n}\n\n/**\n * Copy string to dataView with some padding\n *\n * @param {DataView | null} dataView - destination data container. If null - only new offset is calculated\n * @param {number} byteOffset - destination byte offset to copy to\n * @param {string} string - source string\n * @param {number} padding - pad the resulting array to multiple of \"padding\" bytes. Additional bytes are filled with 0x20 (ASCII space)\n *\n * @return new byteOffset of resulting dataView\n */\nexport function copyPaddedStringToDataView(\n  dataView: DataView | null,\n  byteOffset: number,\n  string: string,\n  padding: number\n): number {\n  const textEncoder = new TextEncoder();\n  // PERFORMANCE IDEA: We encode twice, once to get size and once to store\n  // PERFORMANCE IDEA: Use TextEncoder.encodeInto() to avoid temporary copy\n  const stringBuffer = textEncoder.encode(string);\n\n  byteOffset = copyPaddedArrayBufferToDataView(dataView, byteOffset, stringBuffer, padding);\n\n  return byteOffset;\n}\n"},"lineCount":null}},"error":null,"hash":"ff7c7987ac5ae28287cc63f29ecd0aae","cacheData":{"env":{}}}