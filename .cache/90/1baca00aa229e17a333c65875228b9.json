{"id":"node_modules/@loaders.gl/loader-utils/dist/esm/lib/binary-utils/memory-copy-utils.js","dependencies":[{"name":"C:\\Users\\Lenovo\\Documents\\Projects\\satelite tracker\\node_modules\\@loaders.gl\\loader-utils\\dist\\esm\\lib\\binary-utils\\memory-copy-utils.js.map","includedInParent":true,"mtime":1664708772490},{"name":"C:\\Users\\Lenovo\\Documents\\Projects\\satelite tracker\\package.json","includedInParent":true,"mtime":1664709020568},{"name":"C:\\Users\\Lenovo\\Documents\\Projects\\satelite tracker\\node_modules\\@loaders.gl\\loader-utils\\package.json","includedInParent":true,"mtime":1664708772146},{"name":"../env-utils/assert","loc":{"line":1,"column":23,"index":23},"parent":"C:\\Users\\Lenovo\\Documents\\Projects\\satelite tracker\\node_modules\\@loaders.gl\\loader-utils\\dist\\esm\\lib\\binary-utils\\memory-copy-utils.js","resolved":"C:\\Users\\Lenovo\\Documents\\Projects\\satelite tracker\\node_modules\\@loaders.gl\\loader-utils\\dist\\esm\\lib\\env-utils\\assert.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.copyArrayBuffer = copyArrayBuffer;\nexports.copyToArray = copyToArray;\nexports.padToNBytes = padToNBytes;\n\nvar _assert = require(\"../env-utils/assert\");\n\nfunction padToNBytes(byteLength, padding) {\n  (0, _assert.assert)(byteLength >= 0);\n  (0, _assert.assert)(padding > 0);\n  return byteLength + (padding - 1) & ~(padding - 1);\n}\n\nfunction copyArrayBuffer(targetBuffer, sourceBuffer, byteOffset, byteLength = sourceBuffer.byteLength) {\n  const targetArray = new Uint8Array(targetBuffer, byteOffset, byteLength);\n  const sourceArray = new Uint8Array(sourceBuffer);\n  targetArray.set(sourceArray);\n  return targetBuffer;\n}\n\nfunction copyToArray(source, target, targetOffset) {\n  let sourceArray;\n\n  if (source instanceof ArrayBuffer) {\n    sourceArray = new Uint8Array(source);\n  } else {\n    const srcByteOffset = source.byteOffset;\n    const srcByteLength = source.byteLength;\n    sourceArray = new Uint8Array(source.buffer || source.arrayBuffer, srcByteOffset, srcByteLength);\n  }\n\n  target.set(sourceArray, targetOffset);\n  return targetOffset + padToNBytes(sourceArray.byteLength, 4);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":10,"column":7},"generated":{"line":12,"column":0}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"padToNBytes","original":{"line":10,"column":16},"generated":{"line":12,"column":9}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":10,"column":7},"generated":{"line":12,"column":20}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"byteLength","original":{"line":10,"column":28},"generated":{"line":12,"column":21}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":10,"column":7},"generated":{"line":12,"column":31}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"padding","original":{"line":10,"column":48},"generated":{"line":12,"column":33}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":10,"column":7},"generated":{"line":12,"column":40}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":10,"column":73},"generated":{"line":12,"column":42}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"assert","original":{"line":11,"column":2},"generated":{"line":13,"column":2}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"assert","original":{"line":11,"column":2},"generated":{"line":13,"column":6}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"assert","original":{"line":11,"column":2},"generated":{"line":13,"column":20}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"byteLength","original":{"line":11,"column":9},"generated":{"line":13,"column":22}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":11,"column":19},"generated":{"line":13,"column":32}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":11,"column":23},"generated":{"line":13,"column":36}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"assert","original":{"line":11,"column":2},"generated":{"line":13,"column":37}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"assert","original":{"line":12,"column":2},"generated":{"line":14,"column":2}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"assert","original":{"line":12,"column":2},"generated":{"line":14,"column":6}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"assert","original":{"line":12,"column":2},"generated":{"line":14,"column":20}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"padding","original":{"line":12,"column":9},"generated":{"line":14,"column":22}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":12,"column":16},"generated":{"line":14,"column":29}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":12,"column":19},"generated":{"line":14,"column":32}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"assert","original":{"line":12,"column":2},"generated":{"line":14,"column":33}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":13,"column":2},"generated":{"line":15,"column":2}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"byteLength","original":{"line":13,"column":10},"generated":{"line":15,"column":9}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":13,"column":20},"generated":{"line":15,"column":19}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"padding","original":{"line":13,"column":24},"generated":{"line":15,"column":23}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":13,"column":31},"generated":{"line":15,"column":30}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":13,"column":34},"generated":{"line":15,"column":33}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":13,"column":20},"generated":{"line":15,"column":34}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"byteLength","original":{"line":13,"column":10},"generated":{"line":15,"column":35}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":13,"column":40},"generated":{"line":15,"column":38}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"padding","original":{"line":13,"column":42},"generated":{"line":15,"column":40}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":13,"column":49},"generated":{"line":15,"column":47}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":13,"column":52},"generated":{"line":15,"column":50}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":13,"column":40},"generated":{"line":15,"column":51}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":13,"column":2},"generated":{"line":15,"column":52}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":14,"column":1},"generated":{"line":16,"column":0}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":22,"column":7},"generated":{"line":18,"column":0}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"copyArrayBuffer","original":{"line":22,"column":16},"generated":{"line":18,"column":9}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":22,"column":7},"generated":{"line":18,"column":24}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"targetBuffer","original":{"line":23,"column":2},"generated":{"line":18,"column":25}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":22,"column":7},"generated":{"line":18,"column":37}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"sourceBuffer","original":{"line":24,"column":2},"generated":{"line":18,"column":39}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":22,"column":7},"generated":{"line":18,"column":51}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"byteOffset","original":{"line":25,"column":2},"generated":{"line":18,"column":53}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":22,"column":7},"generated":{"line":18,"column":63}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"byteLength","original":{"line":26,"column":2},"generated":{"line":18,"column":65}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":26,"column":20},"generated":{"line":18,"column":75}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"sourceBuffer","original":{"line":26,"column":23},"generated":{"line":18,"column":78}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":26,"column":35},"generated":{"line":18,"column":90}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"byteLength","original":{"line":26,"column":36},"generated":{"line":18,"column":91}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":22,"column":7},"generated":{"line":18,"column":101}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":27,"column":15},"generated":{"line":18,"column":103}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":19,"column":2}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"targetArray","original":{"line":28,"column":8},"generated":{"line":19,"column":8}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":28,"column":19},"generated":{"line":19,"column":19}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":28,"column":22},"generated":{"line":19,"column":22}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"Uint8Array","original":{"line":28,"column":26},"generated":{"line":19,"column":26}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":28,"column":22},"generated":{"line":19,"column":36}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"targetBuffer","original":{"line":28,"column":37},"generated":{"line":19,"column":37}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":28,"column":22},"generated":{"line":19,"column":49}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"byteOffset","original":{"line":28,"column":51},"generated":{"line":19,"column":51}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":28,"column":22},"generated":{"line":19,"column":61}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"byteLength","original":{"line":28,"column":63},"generated":{"line":19,"column":63}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":28,"column":22},"generated":{"line":19,"column":73}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":19,"column":74}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":20,"column":2}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"sourceArray","original":{"line":29,"column":8},"generated":{"line":20,"column":8}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":29,"column":19},"generated":{"line":20,"column":19}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":29,"column":22},"generated":{"line":20,"column":22}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"Uint8Array","original":{"line":29,"column":26},"generated":{"line":20,"column":26}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":29,"column":22},"generated":{"line":20,"column":36}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"sourceBuffer","original":{"line":29,"column":37},"generated":{"line":20,"column":37}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":29,"column":22},"generated":{"line":20,"column":49}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":20,"column":50}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"targetArray","original":{"line":30,"column":2},"generated":{"line":21,"column":2}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":30,"column":13},"generated":{"line":21,"column":13}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"set","original":{"line":30,"column":14},"generated":{"line":21,"column":14}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"targetArray","original":{"line":30,"column":2},"generated":{"line":21,"column":17}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"sourceArray","original":{"line":30,"column":18},"generated":{"line":21,"column":18}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"targetArray","original":{"line":30,"column":2},"generated":{"line":21,"column":29}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":31,"column":2},"generated":{"line":22,"column":2}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"targetBuffer","original":{"line":31,"column":9},"generated":{"line":22,"column":9}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":31,"column":2},"generated":{"line":22,"column":21}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":23,"column":0}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":25,"column":0}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"copyToArray","original":{"line":42,"column":16},"generated":{"line":25,"column":9}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":25,"column":20}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"source","original":{"line":42,"column":28},"generated":{"line":25,"column":21}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":25,"column":27}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"target","original":{"line":42,"column":55},"generated":{"line":25,"column":29}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":25,"column":35}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"targetOffset","original":{"line":42,"column":68},"generated":{"line":25,"column":37}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":25,"column":49}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":42,"column":98},"generated":{"line":25,"column":51}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":43,"column":2},"generated":{"line":26,"column":2}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"sourceArray","original":{"line":43,"column":6},"generated":{"line":26,"column":6}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":43,"column":2},"generated":{"line":26,"column":17}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":28,"column":2}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"source","original":{"line":45,"column":6},"generated":{"line":28,"column":6}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":45,"column":12},"generated":{"line":28,"column":12}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"ArrayBuffer","original":{"line":45,"column":24},"generated":{"line":28,"column":24}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":28,"column":35}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":45,"column":37},"generated":{"line":28,"column":37}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"sourceArray","original":{"line":46,"column":4},"generated":{"line":29,"column":4}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":46,"column":15},"generated":{"line":29,"column":15}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":46,"column":18},"generated":{"line":29,"column":18}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"Uint8Array","original":{"line":46,"column":22},"generated":{"line":29,"column":22}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":46,"column":18},"generated":{"line":29,"column":32}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"source","original":{"line":46,"column":33},"generated":{"line":29,"column":33}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":46,"column":18},"generated":{"line":29,"column":39}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"sourceArray","original":{"line":46,"column":4},"generated":{"line":29,"column":40}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":30,"column":2}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":30,"column":3}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":47,"column":9},"generated":{"line":30,"column":9}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":31,"column":4}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"srcByteOffset","original":{"line":54,"column":10},"generated":{"line":31,"column":10}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":54,"column":23},"generated":{"line":31,"column":23}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"source","original":{"line":54,"column":26},"generated":{"line":31,"column":26}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":54,"column":32},"generated":{"line":31,"column":32}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"byteOffset","original":{"line":54,"column":33},"generated":{"line":31,"column":33}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":31,"column":43}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":55,"column":4},"generated":{"line":32,"column":4}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"srcByteLength","original":{"line":55,"column":10},"generated":{"line":32,"column":10}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":55,"column":23},"generated":{"line":32,"column":23}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"source","original":{"line":55,"column":26},"generated":{"line":32,"column":26}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":55,"column":32},"generated":{"line":32,"column":32}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"byteLength","original":{"line":55,"column":33},"generated":{"line":32,"column":33}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":55,"column":4},"generated":{"line":32,"column":43}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"sourceArray","original":{"line":58,"column":4},"generated":{"line":33,"column":4}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":58,"column":15},"generated":{"line":33,"column":15}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":58,"column":18},"generated":{"line":33,"column":18}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"Uint8Array","original":{"line":58,"column":22},"generated":{"line":33,"column":22}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":58,"column":18},"generated":{"line":33,"column":32}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"source","original":{"line":58,"column":33},"generated":{"line":33,"column":33}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":58,"column":39},"generated":{"line":33,"column":39}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"buffer","original":{"line":58,"column":40},"generated":{"line":33,"column":40}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"source","original":{"line":58,"column":33},"generated":{"line":33,"column":46}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"source","original":{"line":58,"column":50},"generated":{"line":33,"column":50}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":58,"column":56},"generated":{"line":33,"column":56}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"arrayBuffer","original":{"line":58,"column":57},"generated":{"line":33,"column":57}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":58,"column":18},"generated":{"line":33,"column":68}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"srcByteOffset","original":{"line":58,"column":70},"generated":{"line":33,"column":70}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":58,"column":18},"generated":{"line":33,"column":83}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"srcByteLength","original":{"line":58,"column":85},"generated":{"line":33,"column":85}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":58,"column":18},"generated":{"line":33,"column":98}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"sourceArray","original":{"line":58,"column":4},"generated":{"line":33,"column":99}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":59,"column":3},"generated":{"line":34,"column":2}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"target","original":{"line":62,"column":2},"generated":{"line":36,"column":2}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":62,"column":8},"generated":{"line":36,"column":8}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"set","original":{"line":62,"column":9},"generated":{"line":36,"column":9}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"target","original":{"line":62,"column":2},"generated":{"line":36,"column":12}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"sourceArray","original":{"line":62,"column":13},"generated":{"line":36,"column":13}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"target","original":{"line":62,"column":2},"generated":{"line":36,"column":24}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"targetOffset","original":{"line":62,"column":26},"generated":{"line":36,"column":26}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"target","original":{"line":62,"column":2},"generated":{"line":36,"column":38}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":64,"column":2},"generated":{"line":37,"column":2}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"targetOffset","original":{"line":64,"column":9},"generated":{"line":37,"column":9}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":64,"column":21},"generated":{"line":37,"column":21}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"padToNBytes","original":{"line":64,"column":24},"generated":{"line":37,"column":24}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":64,"column":35},"generated":{"line":37,"column":35}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"sourceArray","original":{"line":64,"column":36},"generated":{"line":37,"column":36}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":64,"column":47},"generated":{"line":37,"column":47}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":"byteLength","original":{"line":64,"column":48},"generated":{"line":37,"column":48}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":64,"column":35},"generated":{"line":37,"column":58}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":64,"column":60},"generated":{"line":37,"column":60}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":64,"column":35},"generated":{"line":37,"column":61}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":64,"column":2},"generated":{"line":37,"column":62}},{"source":"../../../../src/lib/binary-utils/memory-copy-utils.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":38,"column":0}}],"sources":{"../../../../src/lib/binary-utils/memory-copy-utils.ts":"import {assert} from '../env-utils/assert';\n\n/**\n * Calculate new size of an arrayBuffer to be aligned to an n-byte boundary\n * This function increases `byteLength` by the minimum delta,\n * allowing the total length to be divided by `padding`\n * @param byteLength\n * @param padding\n */\nexport function padToNBytes(byteLength: number, padding: number): number {\n  assert(byteLength >= 0); // `Incorrect 'byteLength' value: ${byteLength}`\n  assert(padding > 0); // `Incorrect 'padding' value: ${padding}`\n  return (byteLength + (padding - 1)) & ~(padding - 1);\n}\n\n/**\n * Creates a new Uint8Array based on two different ArrayBuffers\n * @param targetBuffer The first buffer.\n * @param sourceBuffer The second buffer.\n * @return The new ArrayBuffer created out of the two.\n */\nexport function copyArrayBuffer(\n  targetBuffer: ArrayBuffer,\n  sourceBuffer: ArrayBuffer,\n  byteOffset: number,\n  byteLength: number = sourceBuffer.byteLength\n): ArrayBuffer {\n  const targetArray = new Uint8Array(targetBuffer, byteOffset, byteLength);\n  const sourceArray = new Uint8Array(sourceBuffer);\n  targetArray.set(sourceArray);\n  return targetBuffer;\n}\n\n/**\n * Copy from source to target at the targetOffset\n *\n * @param source - The data to copy\n * @param target - The destination to copy data into\n * @param targetOffset - The start offset into target to place the copied data\n * @returns the new offset taking into account proper padding\n */\nexport function copyToArray(source: ArrayBuffer | any, target: any, targetOffset: number): number {\n  let sourceArray;\n\n  if (source instanceof ArrayBuffer) {\n    sourceArray = new Uint8Array(source);\n  } else {\n    // Pack buffer onto the big target array\n    //\n    // 'source.data.buffer' could be a view onto a larger buffer.\n    // We MUST use this constructor to ensure the byteOffset and byteLength is\n    // set to correct values from 'source.data' and not the underlying\n    // buffer for target.set() to work properly.\n    const srcByteOffset = source.byteOffset;\n    const srcByteLength = source.byteLength;\n    // In gltf parser it is set as \"arrayBuffer\" instead of \"buffer\"\n    // https://github.com/visgl/loaders.gl/blob/1e3a82a0a65d7b6a67b1e60633453e5edda2960a/modules/gltf/src/lib/parse-gltf.js#L85\n    sourceArray = new Uint8Array(source.buffer || source.arrayBuffer, srcByteOffset, srcByteLength);\n  }\n\n  // Pack buffer onto the big target array\n  target.set(sourceArray, targetOffset);\n\n  return targetOffset + padToNBytes(sourceArray.byteLength, 4);\n}\n"},"lineCount":null}},"error":null,"hash":"5b419dead2f114dd4231b324346ac7b7","cacheData":{"env":{}}}