{"id":"node_modules/@loaders.gl/textures/dist/esm/lib/encoders/encode-texture.js","dependencies":[{"name":"C:\\Users\\Lenovo\\Documents\\Projects\\satelite tracker\\node_modules\\@loaders.gl\\textures\\dist\\esm\\lib\\encoders\\encode-texture.js.map","includedInParent":true,"mtime":1664708773115},{"name":"C:\\Users\\Lenovo\\Documents\\Projects\\satelite tracker\\package.json","includedInParent":true,"mtime":1664709020568},{"name":"C:\\Users\\Lenovo\\Documents\\Projects\\satelite tracker\\node_modules\\@loaders.gl\\textures\\package.json","includedInParent":true,"mtime":1664708772718},{"name":"@loaders.gl/worker-utils","loc":{"line":1,"column":34,"index":34},"parent":"C:\\Users\\Lenovo\\Documents\\Projects\\satelite tracker\\node_modules\\@loaders.gl\\textures\\dist\\esm\\lib\\encoders\\encode-texture.js","resolved":"C:\\Users\\Lenovo\\Documents\\Projects\\satelite tracker\\node_modules\\@loaders.gl\\worker-utils\\dist\\esm\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeImageURLToCompressedTextureURL = encodeImageURLToCompressedTextureURL;\n\nvar _workerUtils = require(\"@loaders.gl/worker-utils\");\n\nasync function encodeImageURLToCompressedTextureURL(inputUrl, outputUrl, options) {\n  const args = ['texture-compressor', '--type', 's3tc', '--compression', 'DXT1', '--quality', 'normal', '--input', inputUrl, '--output', outputUrl];\n  const childProcess = new _workerUtils.ChildProcessProxy();\n  await childProcess.start({\n    command: 'npx',\n    arguments: args,\n    spawn: options\n  });\n  return outputUrl;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":7,"column":7},"generated":{"line":10,"column":0}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":"encodeImageURLToCompressedTextureURL","original":{"line":7,"column":22},"generated":{"line":10,"column":15}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":7,"column":7},"generated":{"line":10,"column":51}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":"inputUrl","original":{"line":8,"column":2},"generated":{"line":10,"column":52}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":7,"column":7},"generated":{"line":10,"column":60}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":"outputUrl","original":{"line":9,"column":2},"generated":{"line":10,"column":62}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":7,"column":7},"generated":{"line":10,"column":71}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":"options","original":{"line":10,"column":2},"generated":{"line":10,"column":73}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":7,"column":7},"generated":{"line":10,"column":80}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":11,"column":19},"generated":{"line":10,"column":82}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":13,"column":2},"generated":{"line":11,"column":2}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":"args","original":{"line":13,"column":8},"generated":{"line":11,"column":8}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":13,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":13,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":11,"column":16}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":13,"column":15},"generated":{"line":11,"column":36}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":16,"column":4},"generated":{"line":11,"column":38}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":13,"column":15},"generated":{"line":11,"column":46}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":16,"column":14},"generated":{"line":11,"column":48}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":13,"column":15},"generated":{"line":11,"column":54}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":17,"column":4},"generated":{"line":11,"column":56}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":13,"column":15},"generated":{"line":11,"column":71}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":17,"column":21},"generated":{"line":11,"column":73}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":13,"column":15},"generated":{"line":11,"column":79}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":11,"column":81}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":13,"column":15},"generated":{"line":11,"column":92}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":18,"column":17},"generated":{"line":11,"column":94}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":13,"column":15},"generated":{"line":11,"column":102}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":11,"column":104}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":13,"column":15},"generated":{"line":11,"column":113}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":"inputUrl","original":{"line":19,"column":15},"generated":{"line":11,"column":115}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":13,"column":15},"generated":{"line":11,"column":123}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":11,"column":125}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":13,"column":15},"generated":{"line":11,"column":135}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":"outputUrl","original":{"line":20,"column":16},"generated":{"line":11,"column":137}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":13,"column":15},"generated":{"line":11,"column":146}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":13,"column":2},"generated":{"line":11,"column":147}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":12,"column":2}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":"childProcess","original":{"line":22,"column":8},"generated":{"line":12,"column":8}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":22,"column":20},"generated":{"line":12,"column":20}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":22,"column":23},"generated":{"line":12,"column":23}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":"ChildProcessProxy","original":{"line":22,"column":27},"generated":{"line":12,"column":27}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":22,"column":23},"generated":{"line":12,"column":57}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":12,"column":59}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":13,"column":2}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":"childProcess","original":{"line":23,"column":8},"generated":{"line":13,"column":8}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":23,"column":20},"generated":{"line":13,"column":20}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":"start","original":{"line":23,"column":21},"generated":{"line":13,"column":21}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":"childProcess","original":{"line":23,"column":8},"generated":{"line":13,"column":26}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":23,"column":27},"generated":{"line":13,"column":27}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":"command","original":{"line":24,"column":4},"generated":{"line":14,"column":4}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":24,"column":11},"generated":{"line":14,"column":11}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":24,"column":13},"generated":{"line":14,"column":13}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":23,"column":27},"generated":{"line":14,"column":18}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":"arguments","original":{"line":25,"column":4},"generated":{"line":15,"column":4}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":25,"column":13},"generated":{"line":15,"column":13}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":"args","original":{"line":25,"column":15},"generated":{"line":15,"column":15}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":23,"column":27},"generated":{"line":15,"column":19}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":"spawn","original":{"line":26,"column":4},"generated":{"line":16,"column":4}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":26,"column":9},"generated":{"line":16,"column":9}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":"options","original":{"line":26,"column":11},"generated":{"line":16,"column":11}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":23,"column":27},"generated":{"line":17,"column":2}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":"childProcess","original":{"line":23,"column":8},"generated":{"line":17,"column":3}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":17,"column":4}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":18,"column":2}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":"outputUrl","original":{"line":28,"column":9},"generated":{"line":18,"column":9}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":18,"column":18}},{"source":"../../../../src/lib/encoders/encode-texture.ts","name":null,"original":{"line":29,"column":1},"generated":{"line":19,"column":0}}],"sources":{"../../../../src/lib/encoders/encode-texture.ts":"import {ChildProcessProxy} from '@loaders.gl/worker-utils';\nimport {CompressedTextureWriterOptions} from '../../compressed-texture-writer';\n\n/*\n * @see https://github.com/TimvanScherpenzeel/texture-compressor\n */\nexport async function encodeImageURLToCompressedTextureURL(\n  inputUrl: string,\n  outputUrl: string,\n  options?: CompressedTextureWriterOptions\n): Promise<string> {\n  // prettier-ignore\n  const args = [\n    // Note: our actual executable is `npx`, so `texture-compressor` is an argument\n    'texture-compressor',\n    '--type', 's3tc',\n    '--compression', 'DXT1',\n    '--quality', 'normal',\n    '--input', inputUrl,\n    '--output', outputUrl\n  ];\n  const childProcess = new ChildProcessProxy();\n  await childProcess.start({\n    command: 'npx',\n    arguments: args,\n    spawn: options\n  });\n  return outputUrl;\n}\n"},"lineCount":null}},"error":null,"hash":"7dc5b2c2d29a2dd5842c4d2a9b2d879f","cacheData":{"env":{}}}